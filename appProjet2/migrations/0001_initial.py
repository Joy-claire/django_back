# Generated by Django 5.1.5 on 2025-02-27 10:46

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Directions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_direction', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Direction',
                'verbose_name_plural': 'Directions',
                'db_table': 'directions',
            },
        ),
        migrations.CreateModel(
            name='Utilisateurs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nom', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('Admin', 'Administrateur'), ('ChefProjet', 'Chef de Projet'), ('Employe', 'Employé')], default='Employe', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'db_table': 'utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Projets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_projet', models.CharField(max_length=50)),
                ('description_projet', models.TextField(blank=True, null=True)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('statut_projet', models.CharField(blank=True, choices=[('En cours', 'En cours'), ('Terminé', 'Terminé'), ('Annulé', 'Annulé')], max_length=20, null=True)),
                ('chef_projet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projets_geres', to=settings.AUTH_USER_MODEL)),
                ('direction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projets', to='appProjet2.directions')),
            ],
            options={
                'verbose_name': 'Projet',
                'verbose_name_plural': 'Projets',
                'db_table': 'projets',
                'permissions': [('add_projet', 'Peut ajouter un projet'), ('change_projet', 'Peut modifier un projet'), ('delete_projet', 'Peut supprimer un projet'), ('view_projet', 'Peut voir les projets')],
            },
        ),
        migrations.CreateModel(
            name='IndicateurPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_indicateur', models.CharField(max_length=50)),
                ('valeur_cible', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('valeur_actuelle', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('projet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicateurs', to='appProjet2.projets')),
            ],
            options={
                'verbose_name': 'Indicateur de Performance',
                'verbose_name_plural': 'Indicateurs de Performance',
                'db_table': 'indicateur_performance',
            },
        ),
        migrations.CreateModel(
            name='Rapports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_rapport', models.CharField(max_length=50)),
                ('fichier', models.FileField(upload_to='rapports/')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('projet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rapports', to='appProjet2.projets')),
            ],
            options={
                'verbose_name': 'Rapport',
                'verbose_name_plural': 'Rapports',
                'db_table': 'rapports',
            },
        ),
        migrations.CreateModel(
            name='Taches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_tache', models.CharField(max_length=100)),
                ('description_tache', models.TextField(blank=True, null=True)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('statut_tache', models.CharField(blank=True, choices=[('À faire', 'À faire'), ('En cours', 'En cours'), ('Terminée', 'Terminée')], max_length=20, null=True)),
                ('projet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taches', to='appProjet2.projets')),
                ('responsable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taches_assignees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tâche',
                'verbose_name_plural': 'Tâches',
                'db_table': 'taches',
            },
        ),
        migrations.CreateModel(
            name='UtilisateursDirections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membres', to='appProjet2.directions')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='directions_affectees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Affectation Direction',
                'verbose_name_plural': 'Affectations Directions',
                'db_table': 'utilisateurs_directions',
                'unique_together': {('utilisateur', 'direction')},
            },
        ),
    ]
